#!/bin/bash

# find . -name *.snm | xargs rm
# find . -name *.log | xargs rm
# find . -name *.brf | xargs rm
# find . -name *.nav | xargs rm
# find . -name *.gz | xargs rm
# find . -name *.toc | xargs rm
# find . -name *.blg | xargs rm
# find . -name *.out | xargs rm

is_yes() {
        yesses={y,Y,yes,Yes,YES}
        if [[ $yesses =~ $1 ]]; then
                echo 1
        fi
        }

is_no() {
        noses={n,N,no,No,No}
        if [[ $noses =~ $1 ]]; then
                echo 1
        fi
        }

printf "\nHello "$USER". Please enter the commit message: "

read msg

# commits a change and pushes a change
git add --all;

git commit -m "$msg"

parse_git_branch() {
git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/'
}

printf "\nPlease enter the name of the upstream remote\n\nOr type Enter to push to current branch that you are on\n\n "

read remote

if [ remote == "" ]; then
   remote=parse_git_branch
fi

echo -e "pushing from all local origins?[y|n]"
read num_origins

if [ $(is_yes $num_origins) ]; then
  for orig in $(git remote); 
	do echo -e "pushing from $orig to $(parse_git_branch) \n";
	    git push -u $orig  $remote; 
   done
elif [  $(is_no $num_origins) ]; then # || [ $num_origins == ""  ] ; then
  git push -u origin $remote
fi

printf "\n\n"
